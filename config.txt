sync-backend/
├── cmd/
│   └── authserver/
│       └── main.go                    # Application entry point - initializes services and starts the server
│
├── configs/
│   ├── app.yaml                       # App-wide configurations like server port, environment
│   ├── auth.yaml                      # Auth-specific configs like token TTLs, password policies
│   ├── db.yaml                        # Database connection settings
│   ├── redis.yaml                     # Redis cache configuration
│   └── log.yaml                       # Logging configuration
│
├── internal/
│   ├── domain/
│   │   ├── entities/
│   │   │   ├── user.go                # User entity with fields and validations
│   │   │   ├── session.go             # Session entity for tracking user sessions
│   │   │   ├── verification.go        # Email verification entity
│   │   │   ├── password_reset.go      # Password reset request entity
│   │   │   └── oauth_account.go       # OAuth connection entity
│   │   │
│   │   ├── repositories/
│   │   │   ├── user_repository.go     # User repository interface
│   │   │   ├── session_repository.go  # Session repository interface
│   │   │   ├── verification_repository.go # Verification repository interface
│   │   │   ├── password_repository.go # Password reset repository interface
│   │   │   └── oauth_repository.go    # OAuth account repository interface
│   │   │
│   │   └── services/
│   │       └── auth_service.go        # Auth service interface with all auth operations
│   │
│   ├── infrastructure/
│   │   ├── cache/
│   │   │   ├── redis_client.go        # Redis client implementation
│   │   │   ├── cache_service.go       # Cache service interface and implementation
│   │   │   ├── user_cache.go          # User caching logic
│   │   │   └── session_cache.go       # Session caching logic
│   │   │
│   │   ├── config/
│   │   │   ├── config.go              # Configuration loader with viper
│   │   │   └── env.go                 # Environment variable handling
│   │   │
│   │   ├── database/
│   │   │   ├── postgres.go            # PostgreSQL connection setup
│   │   │   └── transaction.go         # Transaction management
│   │   │
│   │   ├── email/
│   │   │   ├── smtp_client.go         # SMTP client for sending emails
│   │   │   ├── templates/
│   │   │   │   ├── verification.html  # Email verification template
│   │   │   │   ├── welcome.html       # Welcome email template
│   │   │   │   └── password_reset.html # Password reset template
│   │   │   └── email_service.go       # Email service implementation
│   │   │
│   │   ├── oauth/
│   │   │   ├── google.go              # Google OAuth implementation
│   │   │   ├── facebook.go            # Facebook OAuth implementation
│   │   │   ├── apple.go               # Apple Sign-In implementation
│   │   │   └── oauth.go               # Common OAuth interface
│   │   │
│   │   ├── persistence/
│   │   │   └── postgres/
│   │   │       ├── user_repo.go       # User repository PostgreSQL implementation
│   │   │       ├── session_repo.go    # Session repository implementation
│   │   │       ├── verification_repo.go # Verification repository implementation
│   │   │       ├── password_repo.go   # Password reset repository implementation
│   │   │       └── oauth_repo.go      # OAuth repository implementation
│   │   │
│   │   └── security/
│   │       ├── jwt.go                 # JWT token generation and validation
│   │       ├── password.go            # Password hashing and verification
│   │       ├── csrf.go                # CSRF token generation and validation
│   │       └── rate_limiter.go        # Rate limiting implementation
│   │
│   ├── application/
│   │   ├── auth/
│   │   │   ├── login_service.go       # Login service with email/password authentication
│   │   │   ├── register_service.go    # User registration service
│   │   │   ├── oauth_service.go       # OAuth authentication service
│   │   │   ├── password_service.go    # Password reset and change service
│   │   │   ├── session_service.go     # Session management service
│   │   │   ├── verification_service.go # Email verification service
│   │   │   └── token_service.go       # Token management service
│   │   │
│   │   └── dto/
│   │       ├── auth_dto.go            # Authentication-related DTOs
│   │       ├── user_dto.go            # User-related DTOs
│   │       └── request_dto.go         # Common request DTOs
│   │
│   ├── api/
│   │   ├── middleware/
│   │   │   ├── auth_middleware.go     # Authentication middleware
│   │   │   ├── logging_middleware.go  # Request logging middleware
│   │   │   ├── rate_limit_middleware.go # Rate limiting middleware
│   │   │   ├── cors_middleware.go     # CORS handling middleware
│   │   │   └── recovery_middleware.go # Panic recovery middleware
│   │   │
│   │   ├── handlers/
│   │   │   ├── auth_handler.go        # Authentication endpoint handlers
│   │   │   ├── oauth_handler.go       # OAuth endpoint handlers
│   │   │   ├── password_handler.go    # Password reset/change handlers
│   │   │   ├── verification_handler.go # Email verification handlers
│   │   │   └── session_handler.go     # Session management handlers
│   │   │
│   │   ├── routes/
│   │   │   ├── router.go              # Main router configuration
│   │   │   └── auth_routes.go         # Authentication routes setup
│   │   │
│   │   └── responses/
│   │       ├── json_response.go       # Standard JSON response formatter
│   │       └── error_response.go      # Error response formatter
│   │
│   ├── errors/
│   │   ├── app_error.go               # Base application error type
│   │   ├── auth_errors.go             # Authentication-specific errors
│   │   ├── validation_errors.go       # Input validation errors
│   │   └── error_handler.go           # Central error handling logic
│   │
│   └── server/
│       ├── http_server.go             # HTTP server configuration
│       └── health_check.go            # Health check endpoints
│
├── pkg/
│   ├── logger/
│   │   ├── logger.go                  # Logger interface
│   │   └── zap_logger.go              # Zap logger implementation
│   │
│   ├── validator/
│   │   ├── validator.go               # Input validation interface
│   │   └── validator_impl.go          # Validator implementation with go-playground/validator
│   │
│   ├── tracing/
│   │   └── tracer.go                  # Request tracing for debugging
│   │
│   └── utils/
│       ├── pagination.go              # Pagination utilities
│       ├── hash.go                    # General hashing utilities
│       ├── random.go                  # Random token generation
│       └── timeutils.go               # Time-related utilities
│
├── migrations/
│   ├── 000001_create_users_table.up.sql        # Create users table
│   ├── 000001_create_users_table.down.sql      # Drop users table
│   ├── 000002_create_sessions_table.up.sql     # Create sessions table
│   ├── 000002_create_sessions_table.down.sql   # Drop sessions table
│   ├── 000003_create_verifications_table.up.sql    # Create email verifications table
│   ├── 000003_create_verifications_table.down.sql  # Drop email verifications table
│   ├── 000004_create_password_resets_table.up.sql  # Create password resets table
│   ├── 000004_create_password_resets_table.down.sql # Drop password resets table
│   ├── 000005_create_oauth_accounts_table.up.sql   # Create OAuth accounts table
│   └── 000005_create_oauth_accounts_table.down.sql # Drop OAuth accounts table
│
├── scripts/
│   ├── migrate.sh                     # Database migration script
│   ├── seed.sh                        # Seed data script for development
│   └── generate_keys.sh               # Generate JWT keys script
│
├── test/
│   ├── integration/
│   │   └── auth_test.go               # Authentication integration tests
│   │
│   ├── unit/
│   │   ├── login_service_test.go      # Login service unit tests
│   │   ├── register_service_test.go   # Registration service unit tests
│   │   ├── password_service_test.go   # Password service unit tests
│   │   ├── jwt_test.go                # JWT utility tests
│   │   └── password_hasher_test.go    # Password hashing tests
│   │
│   └── mocks/
│       ├── repositories/              # Mock repositories for testing
│       └── services/                  # Mock services for testing
│
├── docker/
│   ├── Dockerfile                     # Main application Dockerfile
│   ├── docker-compose.yml             # Docker compose for local development
│   └── docker-compose.prod.yml        # Production Docker compose
│
├── go.mod                             # Go modules file
├── go.sum                             # Go modules checksum
├── Makefile                           # Build and development tasks
├── .env.example                       # Example environment variables
└── README.md                          # Project documentation